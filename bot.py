import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.client.session.aiohttp import AiohttpSession
from aiogram import F
from aiogram.utils.formatting import (
    HashTag
)

from config_reader import config
from datetime import datetime
from coinmarketcapapi import CoinMarketCapAPI
import locale
import pytz



# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
session = AiohttpSession(proxy="socks5://127.0.0.1:2080/")
bot = Bot(token=config.bot_token.get_secret_value(), session=session)
cmc = CoinMarketCapAPI(api_key=config.CoinMarketCapAPI.get_secret_value())

desired_timezone = pytz.timezone('Asia/Shanghai')
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    kb = [
        [
        types.KeyboardButton(text="üíµ USD/CNY üí∞"),
        types.KeyboardButton(text="üíµ USD/RUB üí∞"),],
        [
        types.KeyboardButton(text="üíµ TON/USD üí∞"),
        types.KeyboardButton(text="üíµ BTC/USD üí∞")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await message.answer("–ö–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç??", reply_markup=keyboard)



@dp.message(F.text.lower() == "üíµ usd/cny üí∞")
async def with_puree(message: types.Message):
    rep = cmc.cryptocurrency_quotes_latest(symbol='USDT', convert = "CNY")
    
    
    price = round(rep.data['USDT'][0]['quote']['CNY']['price'], 2 )

    date = datetime.fromisoformat(rep.timesamp).astimezone(desired_timezone).strftime("%d.%m.%Y")
    time = datetime.fromisoformat(rep.timesamp ).astimezone(desired_timezone).strftime("%H:%M")
    
    percent_change_24h = round(rep.data['USDT'][0]['quote']['CNY']['percent_change_24h'], 2 )
    percent_change_7d = round(rep.data['USDT'][0]['quote']['CNY']['percent_change_7d'], 2 )    
    
    if percent_change_24h < 0:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñº {percent_change_24h_price} CNY ({percent_change_24h}%)"
        percent_change_24h_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    else:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñ≤ {percent_change_24h_price} CNY ({percent_change_24h}%)"
        percent_change_24h_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    

    if percent_change_7d < 0:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñº {percent_change_7d_price} CNY ({percent_change_7d}%)"
        percent_change_7d_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    else:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñ≤ {percent_change_7d_price} CNY ({percent_change_7d}%)"
        percent_change_7d_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    
    text = f'''üìàüíµ –ö—É—Ä—Å USD –∫ CNY üí∞üìâ\n\nüìÜ –î–∞—Ç–∞: {date}\nüïí –í—Ä–µ–º—è: {time}\n\nüí± 1 USD = {price} CNY\n\n{percent_change_24h_text}\n\n{percent_change_7d_text}'''
    await message.reply(text)


@dp.message(F.text.lower() == "üíµ usd/rub üí∞")
async def with_puree(message: types.Message):
    rep = cmc.cryptocurrency_quotes_latest(symbol='USDT', convert = "RUB")
    
    
    price = round(rep.data['USDT'][0]['quote']['RUB']['price'], 2 )

    date = datetime.fromisoformat(rep.timesamp).astimezone(desired_timezone).strftime("%d.%m.%Y")
    time = datetime.fromisoformat(rep.timesamp ).astimezone(desired_timezone).strftime("%H:%M")
    
    percent_change_24h = round(rep.data['USDT'][0]['quote']['RUB']['percent_change_24h'], 2 )
    percent_change_7d = round(rep.data['USDT'][0]['quote']['RUB']['percent_change_7d'], 2 )    
    
    if percent_change_24h < 0:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñº {percent_change_24h_price} RUB ({percent_change_24h}%)"
        percent_change_24h_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    else:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñ≤ {percent_change_24h_price} RUB ({percent_change_24h}%)"
        percent_change_24h_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    

    if percent_change_7d < 0:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñº {percent_change_7d_price} RUB ({percent_change_7d}%)"
        percent_change_7d_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    else:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñ≤ {percent_change_7d_price} RUB ({percent_change_7d}%)"
        percent_change_7d_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    
    text = f'''üìàüíµ –ö—É—Ä—Å USD –∫ RUB üí∞üìâ\n\nüìÜ –î–∞—Ç–∞: {date}\nüïí –í—Ä–µ–º—è: {time}\n\nüí± 1 USD = {price} RUB\n\n{percent_change_24h_text}\n\n{percent_change_7d_text}'''
    await message.reply(text)


@dp.message(F.text.lower() == "üíµ ton/usd üí∞")
async def with_puree(message: types.Message):
    rep = cmc.cryptocurrency_quotes_latest(slug='toncoin', convert = "USD")
    
    
    price = round(rep.data['11419']['quote']['USD']['price'], 2 )

    date = datetime.fromisoformat(rep.timesamp).astimezone(desired_timezone).strftime("%d.%m.%Y")
    time = datetime.fromisoformat(rep.timesamp ).astimezone(desired_timezone).strftime("%H:%M")
    
    percent_change_24h = round(rep.data['11419']['quote']['USD']['percent_change_24h'], 2 )
    percent_change_7d = round(rep.data['11419']['quote']['USD']['percent_change_7d'], 2 )    
    
    if percent_change_24h < 0:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñº {percent_change_24h_price} USD ({percent_change_24h}%)"
        percent_change_24h_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    else:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñ≤ {percent_change_24h_price} USD ({percent_change_24h}%)"
        percent_change_24h_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    

    if percent_change_7d < 0:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñº {percent_change_7d_price} USD ({percent_change_7d}%)"
        percent_change_7d_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    else:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñ≤ {percent_change_7d_price} USD ({percent_change_7d}%)"
        percent_change_7d_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    
    text = f'''üìàüíµ –ö—É—Ä—Å TON –∫ USD üí∞üìâ\n\nüìÜ –î–∞—Ç–∞: {date}\nüïí –í—Ä–µ–º—è: {time}\n\nüí± 1 TON = {price} USD\n\n{percent_change_24h_text}\n\n{percent_change_7d_text}'''
    await message.reply(text)


@dp.message(F.text.lower() == "üíµ btc/usd üí∞")
async def with_puree(message: types.Message):
    rep = cmc.cryptocurrency_quotes_latest(slug='bitcoin', convert = "USD")
    price = round(rep.data['1']['quote']['USD']['price'], 2 )

    date = datetime.fromisoformat(rep.timesamp).astimezone(desired_timezone).strftime("%d.%m.%Y")
    time = datetime.fromisoformat(rep.timesamp ).astimezone(desired_timezone).strftime("%H:%M")
    
    percent_change_24h = round(rep.data['1']['quote']['USD']['percent_change_24h'], 2 )
    percent_change_7d = round(rep.data['1']['quote']['USD']['percent_change_7d'], 2 )
    if percent_change_24h < 0:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñº {percent_change_24h_price} USD ({percent_change_24h}%)"
        percent_change_24h_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    else:
        percent_change_24h_price = round((price*percent_change_24h)/100, 2)
        percent_change_24h = f"‚ñ≤ {percent_change_24h_price} USD ({percent_change_24h}%)"
        percent_change_24h_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ —Å—É—Ç–∫–∏:\n{percent_change_24h}"
    

    if percent_change_7d < 0:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñº {percent_change_7d_price} USD ({percent_change_7d}%)"
        percent_change_7d_text = f"üìâ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    else:
        percent_change_7d_price = round((price*percent_change_7d)/100, 2)
        percent_change_7d = f"‚ñ≤ {percent_change_7d_price} USD ({percent_change_7d}%)"
        percent_change_7d_text = f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é:\n{percent_change_7d}"
    
    text = f'''üìàüíµ –ö—É—Ä—Å BTC –∫ USD üí∞üìâ\n\nüìÜ –î–∞—Ç–∞: {date}\nüïí –í—Ä–µ–º—è: {time}\n\nüí± 1 BTC = {price} USD\n\n{percent_change_24h_text}\n\n{percent_change_7d_text}'''
    await message.reply(text)


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())